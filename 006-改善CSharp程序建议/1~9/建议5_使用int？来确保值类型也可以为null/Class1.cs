using System;

namespace 建议5_使用int_来确保值类型也可以为null
{
    
    //基元类型为什么需要为null？考虑两个场景：

    //1）数据库中一个int字段可以被设置为null。在C#中，值被取出来后，为了将它赋值给int类型，不得不首先判断一下它是否为null。如果将null直接赋值给int类型，会引发异常。

    //2）在一个分布式系统中，服务器需要接收并解析来自于客户端的数据。一个int型数据可能在传输过程中丢失或被篡改了，转型失败后应该保存为null值，而不是提供一个初始值。

    //因为是结构体，所以只有值引用类型才可以作为“可以为空的类型”（引用类型本身就可以为null）。一个可以为空的int类型表示为：

    //Nullable<int> i = null;

    //    它也可以表示为：

    //int? i = null;
    public class Class1
    {
    }
}
